import numpy as np

# Common to both models
NUM_SUBJECTS = 3
SD_MEAN_UC0 = 1
SD_SD_UC = 1
MEAN_MEAN_A0 = np.zeros((NUM_SUBJECTS, 2))
SD_SD_A = np.ones(1)
SD_SD_O = np.ones(1)
SHARE_MEAN_A0_ACROSS_SUBJECT = False
SHARE_MEAN_A0_ACROSS_DIMENSIONS = False
SHARE_SD_ACROSS_SUBJECTS = True  # same variance across subjects
SHARE_SD_ACROSS_DIMENSIONS = True  # same variance for position and speed
NUM_TIME_STEPS = 100

BURN_IN = 2000
NUM_SAMPLES = 2000
TARGET_ACCEPT = 0.9

# Conversation model
#   For sample generation
INITIAL_STATE_CONVERSATION_MODEL = np.array([[1, 0], [1, 0], [1, 0]])
SD_A_CONVERSATION_MODEL = np.array([0.1])
SD_O_CONVERSATION_MODEL = np.array([0.01])
# ---
SUBJECT_NAMES_CONVERSATION_MODEL = ["Bob", "Alice", "Dan"]
ANGULAR_FREQUENCIES_CONVERSATION_MODEL = np.array([1, 0.5, 0.1])
DAMPENING_COEFFICIENTS_CONVERSATION_MODEL = np.zeros(NUM_SUBJECTS)
DT_CONVERSATION_MODEL = 0.2
SD_MEAN_A0_CONVERSATION_MODEL = np.ones((NUM_SUBJECTS, 2)) * max(
    INITIAL_STATE_CONVERSATION_MODEL[:, 0])
SAMPLING_TIME_SCALE_DENSITY_CONVERSATIONAL_MODEL = 1.0
ALLOW_SAMPLED_SUBJECT_REPETITION_CONVERSATIONAL_MODEL = False
FIX_SAMPLED_SUBJECT_SEQUENCE_CONVERSATIONAL_MODEL = True

# Spring model
#   For sample generation
INITIAL_STATE_SPRING_MODEL = np.array([[1, 0], [3, 0], [5, 0]])
SD_A_SPRING_MODEL = np.array([0.1])
SD_O_SPRING_MODEL = np.array([0.1])
# ---
SPRING_NAMES_SPRING_MODEL = ["Spring 1", "Spring 2", "Spring 3"]
MASS_SPRING_MODEL = np.ones(NUM_SUBJECTS) * 10
SPRING_CONSTANT_SPRING_MODEL = np.array([16, 8, 4])
DAMPENING_COEFFICIENTS_SPRING_MODEL = np.zeros(NUM_SUBJECTS)
DT_SPRING_MODEL = 1.0
SD_MEAN_A0_SPRING_MODEL = np.ones((NUM_SUBJECTS, 2)) * max(
    INITIAL_STATE_SPRING_MODEL[:, 0])
SAMPLING_RELATIVE_FREQUENCY_SPRING_MODEL = 1.0
